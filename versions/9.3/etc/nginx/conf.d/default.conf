server {
    listen       80;
    listen       443 ssl;
    server_name  localhost;
    
    #return 302 https://$server_name$request_uri;
    include /etc/nginx/snippets/*.conf;
    #include /etc/nginx/snippets/self-signed.conf;
    #include /etc/nginx/snippets/ssl-params.conf;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /etc/nginx/html/;
        index  index.html index.htm;
    
	expires -1;

    	sub_filter_once off;
    	sub_filter '_status' '$status';
    	sub_filter '_server_addr' '$server_addr';
    	sub_filter '_server_port' '$server_port';
    	sub_filter '_hostname' '$hostname';
   	    sub_filter '_time_local' '$time_local';
    	sub_filter '_http_user_agent' '$http_user_agent';
    	sub_filter '_http_cookie' '$http_cookie';
    	sub_filter '_request_uri' '$request_uri';
    	sub_filter '_request_id' '$request_id';	
        sub_filter '_nginx_version' '$nginx_version';	
}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
    root   /etc/nginx/html/;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}